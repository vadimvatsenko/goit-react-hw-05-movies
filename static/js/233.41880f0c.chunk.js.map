{"version":3,"file":"static/js/233.41880f0c.chunk.js","mappings":"sPACA,EAAiH,8BAAjH,EAA2J,6BAA3J,EAAmM,4BAAnM,EAAwO,0B,SCIzN,SAASA,EAAT,GAAmF,IAA/DC,EAA8D,EAA9DA,MAAOC,EAAuD,EAAvDA,OAAQC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,aAC9E,OACI,qBAASC,UAAWC,EAApB,WACE,gBAAKC,IAAKP,EAAQQ,IAAKT,EAAOU,MAAM,SACpC,4BACE,0BAAKV,EAAL,eAAiBE,EAAaS,MAAM,EAAG,GAAvC,SACA,iBAAKL,UAAWC,EAAhB,WACE,wCACA,eAAGD,UAAWC,EAAd,UAAiCK,KAAKC,MAAqB,GAAfR,GAA5C,WAGF,iBAAKC,UAAWC,EAAhB,WACE,sCACA,cAAGD,UAAWC,EAAd,SAAiCJ,QAEnC,iBAAKG,UAAWC,EAAhB,WACE,oCACA,eAAID,UAAWC,EAAf,SACGH,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,eAAIV,UAAWC,EAAf,SAA2CS,GAALD,EAD5B,cAQ3B,CC9BD,MAA+F,2CAA/F,EAA0J,qCAA1J,EAAmN,yC,QCEpM,SAAUE,IACrB,OACI,oBAASX,UAAWC,EAApB,UACE,gBAAID,UAAWC,EAAf,WACE,eAAID,UAAWC,EAAf,UAAwC,SAAC,KAAD,CAAMW,GAAG,OAAT,qBACxC,eAAIZ,UAAWC,EAAf,UAAwC,SAAC,KAAD,CAAMW,GAAG,UAAT,2BAInD,CCLc,SAASC,IAEtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8CE,EAAAA,EAAAA,UAAS,MAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KAEA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAcG,GAAd,WAsBA,IApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,0HAEOC,EAAAA,EAAAA,IAAcR,GAFrB,OAEVS,EAFU,OAGT7B,EAAoE6B,EAApE7B,MAAO8B,EAA6DD,EAA7DC,YAAa5B,EAAgD2B,EAAhD3B,aAAcC,EAAkC0B,EAAlC1B,SAAUC,EAAwByB,EAAxBzB,OAAQC,EAAgBwB,EAAhBxB,aAC3DmB,EAAmB,CACjBxB,MAAAA,EACA8B,YAAAA,EACA5B,aAAAA,EACAC,SAAAA,EACAC,OAAAA,EACAC,aAAAA,IAVc,gDAahBoB,EAAS,EAAD,IAbQ,yDAAH,qDAgBjBE,GACD,GAAE,CAACP,IAEAG,EAAiB,CACnB,IAAQvB,EAAqEuB,EAArEvB,MAAO8B,EAA8DP,EAA9DO,YAAa5B,EAAiDqB,EAAjDrB,aAAcC,EAAmCoB,EAAnCpB,SAAUC,EAAyBmB,EAAzBnB,OAAQC,EAAiBkB,EAAjBlB,aACtDJ,EAAM,0CAAsC6B,GAElD,OACE,6BACE,SAAC,EAAD,CACE9B,MAAOA,EACPC,OAAQA,EACRC,aAAcA,EACdC,SAAUA,EACVC,OAAQA,EACRC,aAAcA,KAIhB,SAACY,EAAD,KACA,SAAC,KAAD,MAGL,CACF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieInfo/MovieInfo.module.scss?18bd","components/MovieInfo/MovieInfo.js","webpack://goit-react-hw-05-movies/./src/components/MovieMoreInfo/MovieMoreInfo.module.scss?94d9","components/MovieMoreInfo/MovieMoreInfo.js","pages/MovieDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"MovieInfo_visually-hidden__KeVBT\",\"text\":\"MovieInfo_text__42l3m\",\"genresItem\":\"MovieInfo_genresItem__3HEy7\",\"movieWrap\":\"MovieInfo_movieWrap__MLlj8\",\"overview\":\"MovieInfo_overview__fAKQx\",\"genres\":\"MovieInfo_genres__DE0ap\"};","import style from './MovieInfo.module.scss';\nimport PropTypes from 'prop-types';\n\n\n\nexport default function MovieInfo({title, imgUrl, release_date, overview, genres, vote_average}) {\n    return (\n        <section className={style.movieWrap}>\n          <img src={imgUrl} alt={title} width='300' />\n          <div>\n            <h3>{title} {`(${release_date.slice(0, 4)})`}</h3>\n            <div className={style.overview}>\n              <h4>User Score</h4>\n              <p className={style.genresItem}>{Math.round(vote_average * 10)}%</p>\n            </div>\n\n            <div className={style.overview}>\n              <h4>Overview</h4>\n              <p className={style.genresItem}>{overview}</p>\n            </div>\n            <div className={style.overview}>\n              <h4>Genres</h4>\n              <ul className={style.genres}>\n                {genres.map(({ id, name }) => (\n                  <li className={style.genresItem} key={id}>{name}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </section>\n    )\n}\n\nMovieInfo.propTypes = {\n  title: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  release_date: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string\n    }).isRequired\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"MovieMoreInfo_visually-hidden__AeUz0\",\"moviMoreInfoSection\":\"MovieMoreInfo_moviMoreInfoSection__gGOX6\",\"movieMoreInfo\":\"MovieMoreInfo_movieMoreInfo__lCEqu\",\"movieMoreInfoLink\":\"MovieMoreInfo_movieMoreInfoLink__vIDhy\"};","import style from './MovieMoreInfo.module.scss';\nimport { Link } from \"react-router-dom\";\n\nexport default function  MovieMoreInfo() {\n    return (\n        <section className={style.moviMoreInfoSection}>\n          <ul className={style.movieMoreInfo}>\n            <li className={style.movieMoreInfoLink}><Link to=\"cast\">Cast</Link></li>\n            <li className={style.movieMoreInfoLink}><Link to=\"reviews\">Reviews</Link></li>\n          </ul>\n        </section>\n    )\n}","import { useParams, Outlet } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { findMovieById } from '../services/API';\n\nimport MoreInfo from '../components/MovieInfo/MovieInfo';\nimport MovieMoreInfo from \"components/MovieMoreInfo/MovieMoreInfo\";\n\nexport default function MovieDetails() {\n\n  const { movieId } = useParams();\n  const [currentMovieObj, setCurrentMovieObj] = useState(null);\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getMovieObj = async () => {\n      try {\n        const movieObj = await findMovieById(movieId);\n        const {title, poster_path, release_date, overview, genres, vote_average} = movieObj\n        setCurrentMovieObj({\n          title,\n          poster_path,\n          release_date,\n          overview,\n          genres,\n          vote_average\n        })\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getMovieObj();\n  }, [movieId]);\n  \n  if (currentMovieObj) {\n    const { title, poster_path, release_date, overview, genres, vote_average } = currentMovieObj;\n    const imgUrl = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  \n    return (\n      <main >\n        <MoreInfo\n          title={title}\n          imgUrl={imgUrl}\n          release_date={release_date}\n          overview={overview}\n          genres={genres}\n          vote_average={vote_average}\n        \n        />\n          \n        <MovieMoreInfo/>\n        <Outlet />\n      </main>\n    );\n  }\n}"],"names":["MovieInfo","title","imgUrl","release_date","overview","genres","vote_average","className","style","src","alt","width","slice","Math","round","map","id","name","MovieMoreInfo","to","MovieDetails","movieId","useParams","useState","currentMovieObj","setCurrentMovieObj","setError","useEffect","getMovieObj","findMovieById","movieObj","poster_path"],"sourceRoot":""}