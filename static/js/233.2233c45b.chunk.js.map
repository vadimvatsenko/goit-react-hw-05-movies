{"version":3,"file":"static/js/233.2233c45b.chunk.js","mappings":"uQACA,EAAiH,8BAAjH,EAA2J,6BAA3J,EAAmM,4BAAnM,EAAwO,0B,SCGzN,SAASA,EAAT,GAAmF,IAA/DC,EAA8D,EAA9DA,MAAOC,EAAuD,EAAvDA,OAAQC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,aAC9E,OACI,qBAASC,UAAWC,EAApB,WACE,gBAAKC,IAAKP,EAAQQ,IAAKT,EAAOU,MAAM,SACpC,4BACE,0BAAKV,EAAL,eAAiBE,EAAaS,MAAM,EAAG,GAAvC,SACA,iBAAKL,UAAWC,EAAhB,WACE,wCACA,eAAGD,UAAWC,EAAd,UAAiCK,KAAKC,MAAqB,GAAfR,GAA5C,WAGF,iBAAKC,UAAWC,EAAhB,WACE,sCACA,cAAGD,UAAWC,EAAd,SAAiCJ,QAEnC,iBAAKG,UAAWC,EAAhB,WACE,oCACA,eAAID,UAAWC,EAAf,SACGH,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,eAAIV,UAAWC,EAAf,SAA2CS,GAALD,EAD5B,cAQ3B,CC7BD,MAA+F,2CAA/F,EAA0J,qCAA1J,EAAmN,yCCIpM,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEf,OADFC,QAAQC,IAAIH,IAEN,oBAASZ,UAAWC,EAApB,UACE,gBAAID,UAAWC,EAAf,WACE,eAAID,UAAWC,EAAf,UAAwC,SAAC,KAAD,CAAMe,GAAG,OAAT,qBACxC,eAAIhB,UAAWC,EAAf,UAAwC,SAAC,KAAD,CAAMe,GAAG,UAAT,2BAInD,CCRc,SAASC,IAAgB,IAAD,IAE7BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8CE,EAAAA,EAAAA,UAAS,MAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KAEA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAcG,GAAd,WACMX,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GACZ,IAAMY,EAAY,oBAAGZ,EAASa,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,SAyB7C,IApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,0HAEOC,EAAAA,EAAAA,IAAcX,GAFrB,OAEVY,EAFU,OAGTpC,EAAoEoC,EAApEpC,MAAOqC,EAA6DD,EAA7DC,YAAanC,EAAgDkC,EAAhDlC,aAAcC,EAAkCiC,EAAlCjC,SAAUC,EAAwBgC,EAAxBhC,OAAQC,EAAgB+B,EAAhB/B,aAC3DuB,EAAmB,CACjB5B,MAAAA,EACAqC,YAAAA,EACAnC,aAAAA,EACAC,SAAAA,EACAC,OAAAA,EACAC,aAAAA,IAVc,gDAahBwB,EAAS,EAAD,IAbQ,yDAAH,qDAgBjBK,GACD,GAAE,CAACV,IAEAG,EAAiB,CACnB,IAAQ3B,EAAqE2B,EAArE3B,MAAOqC,EAA8DV,EAA9DU,YAAanC,EAAiDyB,EAAjDzB,aAAcC,EAAmCwB,EAAnCxB,SAAUC,EAAyBuB,EAAzBvB,OAAQC,EAAiBsB,EAAjBtB,aACtDJ,EAAM,0CAAsCoC,GAElD,OAEI,4BACA,UAAC,KAAD,CAAMf,GAAIQ,EACRvB,MAAO,CACP+B,SAAU,WACVC,QAAS,eACPC,gBAAiB,SACjBC,QAAS,OACXC,aAAc,OANhB,WAQE,SAAC,MAAD,IARF,WAWA,SAAC,EAAD,CAEE1C,MAAOA,EACPC,OAAQA,EACRC,aAAcA,EACdC,SAAUA,EACVC,OAAQA,EACRC,aAAcA,KAIhB,SAACY,EAAD,CACEc,MAAO,CAACC,KAAMd,MAChB,SAAC,KAAD,MAGL,CACF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieInfo/MovieInfo.module.scss?18bd","components/MovieInfo/MovieInfo.js","webpack://goit-react-hw-05-movies/./src/components/MovieMoreInfo/MovieMoreInfo.module.scss?94d9","components/MovieMoreInfo/MovieMoreInfo.js","pages/MovieDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"MovieInfo_visually-hidden__KeVBT\",\"text\":\"MovieInfo_text__42l3m\",\"genresItem\":\"MovieInfo_genresItem__3HEy7\",\"movieWrap\":\"MovieInfo_movieWrap__MLlj8\",\"overview\":\"MovieInfo_overview__fAKQx\",\"genres\":\"MovieInfo_genres__DE0ap\"};","//DONE\nimport style from './MovieInfo.module.scss';\nimport PropTypes from 'prop-types';\n\nexport default function MovieInfo({title, imgUrl, release_date, overview, genres, vote_average}) {\n    return (\n        <section className={style.movieWrap}>\n          <img src={imgUrl} alt={title} width='300' />\n          <div>\n            <h3>{title} {`(${release_date.slice(0, 4)})`}</h3>\n            <div className={style.overview}>\n              <h4>User Score</h4>\n              <p className={style.genresItem}>{Math.round(vote_average * 10)}%</p>\n            </div>\n\n            <div className={style.overview}>\n              <h4>Overview</h4>\n              <p className={style.genresItem}>{overview}</p>\n            </div>\n            <div className={style.overview}>\n              <h4>Genres</h4>\n              <ul className={style.genres}>\n                {genres.map(({ id, name }) => (\n                  <li className={style.genresItem} key={id}>{name}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </section>\n    )\n}\n\nMovieInfo.propTypes = {\n  title: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  release_date: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string\n    }).isRequired\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"MovieMoreInfo_visually-hidden__AeUz0\",\"moviMoreInfoSection\":\"MovieMoreInfo_moviMoreInfoSection__gGOX6\",\"movieMoreInfo\":\"MovieMoreInfo_movieMoreInfo__lCEqu\",\"movieMoreInfoLink\":\"MovieMoreInfo_movieMoreInfoLink__vIDhy\"};","import style from './MovieMoreInfo.module.scss';\nimport { Link, useLocation } from \"react-router-dom\";\n\n\n\nexport default function MovieMoreInfo() {\n  const location = useLocation()\n  console.log(location)\n    return (\n        <section className={style.moviMoreInfoSection}>\n          <ul className={style.movieMoreInfo}>\n            <li className={style.movieMoreInfoLink}><Link to=\"cast\">Cast</Link></li>\n            <li className={style.movieMoreInfoLink}><Link to=\"reviews\">Reviews</Link></li>\n          </ul>\n        </section>\n    )\n}","import { useParams, Outlet, useLocation, Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { findMovieById } from '../services/API';\nimport { HiArrowLeft } from \"react-icons/hi\";\n\nimport MoreInfo from '../components/MovieInfo/MovieInfo';\nimport MovieMoreInfo from \"components/MovieMoreInfo/MovieMoreInfo\";\n\nexport default function MovieDetails() {\n\n  const { movieId } = useParams();\n  const [currentMovieObj, setCurrentMovieObj] = useState(null);\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  console.log(location)\n  const backLinkHref = location.state?.from ?? \"/movie\";\n\n\n\n\n  useEffect(() => {\n    const getMovieObj = async () => {\n      try {\n        const movieObj = await findMovieById(movieId);\n        const {title, poster_path, release_date, overview, genres, vote_average} = movieObj\n        setCurrentMovieObj({\n          title,\n          poster_path,\n          release_date,\n          overview,\n          genres,\n          vote_average\n        })\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getMovieObj();\n  }, [movieId]);\n  \n  if (currentMovieObj) {\n    const { title, poster_path, release_date, overview, genres, vote_average } = currentMovieObj;\n    const imgUrl = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  \n    return (\n      \n        <div>\n        <Link to={backLinkHref}\n          style={{\n          position: 'absolute',\n          display: 'inline-block',\n            backgroundColor: 'yellow',\n            padding: '10px',\n          borderRadius: '5px',\n        }}>\n          <HiArrowLeft />\n          Back\n        </Link>\n        <MoreInfo\n          \n          title={title}\n          imgUrl={imgUrl}\n          release_date={release_date}\n          overview={overview}\n          genres={genres}\n          vote_average={vote_average}\n        \n        />\n          \n        <MovieMoreInfo\n          state={{from: location}} />\n        <Outlet />\n      </div>\n    );\n  }\n}"],"names":["MovieInfo","title","imgUrl","release_date","overview","genres","vote_average","className","style","src","alt","width","slice","Math","round","map","id","name","MovieMoreInfo","location","useLocation","console","log","to","MovieDetails","movieId","useParams","useState","currentMovieObj","setCurrentMovieObj","setError","backLinkHref","state","from","useEffect","getMovieObj","findMovieById","movieObj","poster_path","position","display","backgroundColor","padding","borderRadius"],"sourceRoot":""}